upstream <%= @vhost %>-upstream {
<%- [@servers].flatten.each do |server| -%>
  server <%= server %>:443 max_fails=3 fail_timeout=10s;
<%- end -%>
}

<%- if @error_on_http -%>
server {
  server_name <%= @vhost_real %> <%= @aliases.join(" ") unless @aliases.empty? %>;
  listen 80;
  return 426 "Request cannot be completed using a plaintext HTTP connection. Retry over HTTPS.\n";
}
<%- elsif @https_redirect -%>
server {
  server_name <%= @vhost_real %> <%= @aliases.join(" ") unless @aliases.empty? %>;
  listen 80;
  rewrite ^/(.*) https://$host/$1 permanent;
}
<%- end -%>

server {
  server_name <%= @vhost_real %> <%= @aliases.join(" ") unless @aliases.empty? %>;

  <%- if @https_redirect == false and @error_on_http == false -%>
  listen              80;
  <%- end -%>
  listen              <%= @https_port %> ssl;
  ssl_certificate     /etc/nginx/ssl/<%= @vhost_real %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= @vhost_real %>.key;
  include             /etc/nginx/ssl.conf;

  # Needed to do keepalives upstream
  proxy_http_version 1.1;

  # Try next upstream if one returns an error
  proxy_next_upstream error http_500;

  proxy_set_header Host $http_host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-Server $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_redirect off;

  proxy_connect_timeout 1s;
  proxy_read_timeout <%= @read_timeout %>;

  # No need to set this limit here, as long as it is enforced by servers
  # behind the load balancers.
  client_max_body_size 4g;

  access_log /var/log/nginx/<%= @vhost_real %>-access.log timed_combined;
  access_log /var/log/nginx/<%= @vhost_real %>-json.event.access.log json_event;
  error_log /var/log/nginx/<%= @vhost_real %>-error.log;

  location = /maintenance.html {
    root /usr/share/nginx/html;
  }

  location / {
    <%- if @internal_only -%>
    # Only accept connnections from internal machines
    allow 10.0.0.0/8;
    allow 127.0.0.1;
    deny all;
    <%- end -%>
    include includes/maintenance.conf;
    if ($maintenance = 1) {
      error_page 503 /maintenance.html;
      return 503;
    }
    proxy_pass https://<%= @vhost %>-upstream;
  }
}
